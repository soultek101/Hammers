package grim3212.mc.hammers;

import grim3212.mc.core.GrimModule;
import grim3212.mc.core.manual.ModSubSection;
import grim3212.mc.core.manual.pages.PageCrafting;
import grim3212.mc.core.util.RecipeHelper;
import grim3212.mc.core.util.Reference;

import java.util.List;

import net.minecraft.item.Item;
import net.minecraft.item.Item.ToolMaterial;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.IRecipe;
import net.minecraftforge.oredict.ShapedOreRecipe;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.registry.GameRegistry;

@Mod(modid = Hammers.modID, name = Hammers.modName, version = Hammers.modVersion, dependencies = "required-after:grim3212core")
public class Hammers extends GrimModule {

	public static final String modID = "hammers";
	public static final String modName = "Hammers";
	public static final String modVersion = "V0.1 - " + Reference.MC_VERSION;
	public static final String modURL = "http://grim3212.wikispaces.com/Hammers";

	public static Item woodHammer;
	public static Item stoneHammer;
	public static Item goldHammer;
	public static Item ironHammer;
	public static Item diamondHammer;

	private List<IRecipe> hammers;

	@EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		ModMetadata data = event.getModMetadata();
		data.autogenerated = false;
		data.version = this.modVersion;
		data.name = this.modName;
		data.description = "A mod that adds in hammers that can destroy blocks in one hit but doesn't drop items.";
		data.authorList.add("Grim3212");
		data.url = this.modURL;
		data.credits = "Thanks to Gorea for the original idea.";
		data.logoFile = Reference.LOGOFILE;

		woodHammer = (new ItemHammer(ToolMaterial.WOOD)).setUnlocalizedName("wood_hammer").setTextureName(this.modID + ":woodHammer");
		stoneHammer = (new ItemHammer(ToolMaterial.STONE)).setUnlocalizedName("stone_hammer").setTextureName(this.modID + ":stoneHammer");
		goldHammer = (new ItemHammer(ToolMaterial.GOLD)).setUnlocalizedName("gold_hammer").setTextureName(this.modID + ":goldHammer");
		ironHammer = (new ItemHammer(ToolMaterial.IRON)).setUnlocalizedName("iron_hammer").setTextureName(this.modID + ":ironHammer");
		diamondHammer = (new ItemHammer(ToolMaterial.EMERALD)).setUnlocalizedName("diamond_hammer").setTextureName(this.modID + ":diamondHammer");

		GameRegistry.registerItem(woodHammer, "woodHammer", this.modID);
		GameRegistry.registerItem(stoneHammer, "stoneHammer", this.modID);
		GameRegistry.registerItem(goldHammer, "goldHammer", this.modID);
		GameRegistry.registerItem(ironHammer, "ironHammer", this.modID);
		GameRegistry.registerItem(diamondHammer, "diamondHammer", this.modID);

		GameRegistry.addRecipe(new ShapedOreRecipe(new ItemStack(woodHammer, 1), new Object[] { "MMM", "MMM", " G ", 'M', "plankWood", 'G', "stickWood" }));
		GameRegistry.addRecipe(new ShapedOreRecipe(new ItemStack(stoneHammer, 1), new Object[] { "MMM", "MMM", " G ", 'M', "cobblestone", 'G', "stickWood" }));
		GameRegistry.addRecipe(new ShapedOreRecipe(new ItemStack(goldHammer, 1), new Object[] { "MMM", "MMM", " G ", 'M', "ingotGold", 'G', "stickWood" }));
		GameRegistry.addRecipe(new ShapedOreRecipe(new ItemStack(ironHammer, 1), new Object[] { "MMM", "MMM", " G ", 'M', "ingotIron", 'G', "stickWood" }));
		GameRegistry.addRecipe(new ShapedOreRecipe(new ItemStack(diamondHammer, 1), new Object[] { "MMM", "MMM", " G ", 'M', "gemDiamond", 'G', "stickWood" }));
		this.hammers = RecipeHelper.getLatestIRecipes(5);
	}

	@EventHandler
	public void init(FMLInitializationEvent event) {
		this.registerMod(modID, modName, modVersion);

		if (event.getSide().isClient()) {
			ModSubSection hammers = new ModSubSection("hammers", this.newModSection).addSubSectionPages(new PageCrafting("recipes", this.hammers, 20));
		}
	}
}